---
kind: pipeline
type: docker
name: default

concurrency:
  limit: 1

trigger:
  branch:
  - master

volumes:
- name: aws
  temp: {}

steps:

- name: files-changed
  image: alpine:3
  commands:
  - apk add git
  - git --no-pager diff --name-only $DRONE_COMMIT_BEFORE..$DRONE_COMMIT_AFTER | tee files-changed

- name: aws-credentials
  image: amazon/aws-cli:2.0.31
  volumes:
  - name: aws
    path: /root/.aws
  environment:
    ASSUME_ROLE_EXTERNAL_ID:
      from_secret: assume_role_external_id
    AWS_ACCOUNT_ID:
      from_secret: demo_account_id
  commands:
  - aws configure set role_arn "arn:aws:iam::$AWS_ACCOUNT_ID:role/DroneTerraformContainerDays"
  - aws configure set region eu-west-1
  - aws configure set credential_source Ec2InstanceMetadata
  - aws configure set external_id $ASSUME_ROLE_EXTERNAL_ID
  - aws sts get-caller-identity
  - aws s3 ls

- name: aws-credentials2
  image: amazon/aws-cli:2.0.31
  volumes:
  - name: aws
    path: /root/.aws
  commands:
  - aws sts get-caller-identity
  - aws s3 ls
  - ls ~/.aws
  - cat ~/.aws/config

- name: terraform
  image: alpine:3
  volumes:
  - name: aws
    path: /root/.aws
  environment:
    # workaround for aws provider bug https://github.com/terraform-providers/terraform-provider-aws/issues/5018
    AWS_METADATA_URL: http://invalid
    AWS_SDK_LOAD_CONFIG: 1
  commands:
  - apk add bash curl git
  - git clone --branch v1.0.2 https://github.com/tfutils/tfenv.git /opt/tfenv
  - ln -s /opt/tfenv/bin/* /usr/local/bin
  - cd dev/eu-west-1/default
  - tfenv install $(cat terraform.version)
  - tfenv use $(cat terraform.version)
  - export AWS_METADATA_URL="http://localhost/not/existent/url" && terraform init
  - terraform plan
